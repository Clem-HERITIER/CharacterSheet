// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wfrp.Infrastructure.Data;

#nullable disable

namespace Wfrp.Infrastructure.Migrations
{
    [DbContext(typeof(WfrpDbContext))]
    [Migration("20250514223340_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Wfrp.Domain.Entities.Career", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CareerClassId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CareerClassId");

                    b.ToTable("Careers");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.CareerClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CareerClass");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.CareerLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CanAdvanceCharacteristics")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CareerId")
                        .HasColumnType("uuid");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CareerId");

                    b.ToTable("CareerLevels");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("FatePoints")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RaceId")
                        .HasColumnType("uuid");

                    b.Property<int>("ResiliencePoints")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.CharacterCareer", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CareerId")
                        .HasColumnType("uuid");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "CareerId");

                    b.HasIndex("CareerId");

                    b.ToTable("CharacterCareers");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.CharacterItem", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("CharacterItems");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.CharacterSkill", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uuid");

                    b.Property<int>("AcquiredAtLevel")
                        .HasColumnType("integer");

                    b.Property<int>("XPSpent")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.CharacterTalent", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TalentId")
                        .HasColumnType("uuid");

                    b.Property<int>("AcquiredAtLevel")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "TalentId");

                    b.HasIndex("TalentId");

                    b.ToTable("CharacterTalents");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Race", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ExtraPoints")
                        .HasColumnType("integer");

                    b.Property<int>("FatePoints")
                        .HasColumnType("integer");

                    b.Property<int>("Movement")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ResiliencePoints")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Talent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Talents");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Armor", b =>
                {
                    b.HasBaseType("Wfrp.Domain.Entities.Item");

                    b.Property<int>("ArmorPoints")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Armor");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Gear", b =>
                {
                    b.HasBaseType("Wfrp.Domain.Entities.Item");

                    b.Property<bool>("IsConsumable")
                        .HasColumnType("boolean");

                    b.HasDiscriminator().HasValue("Gear");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Weapon", b =>
                {
                    b.HasBaseType("Wfrp.Domain.Entities.Item");

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<string>("Flaws")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Qualities")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reach")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Weapon");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Career", b =>
                {
                    b.HasOne("Wfrp.Domain.Entities.CareerClass", "CareerClass")
                        .WithMany("Careers")
                        .HasForeignKey("CareerClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CareerClass");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.CareerLevel", b =>
                {
                    b.HasOne("Wfrp.Domain.Entities.Career", "Career")
                        .WithMany("Levels")
                        .HasForeignKey("CareerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Career");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Character", b =>
                {
                    b.HasOne("Wfrp.Domain.Entities.Race", "Race")
                        .WithMany("Characters")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Wfrp.Domain.Entities.Characteristics", "AdvancesCharacteristics", b1 =>
                        {
                            b1.Property<Guid>("CharacterId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Agility")
                                .HasColumnType("integer");

                            b1.Property<int>("BallisticSkill")
                                .HasColumnType("integer");

                            b1.Property<int>("Dexterity")
                                .HasColumnType("integer");

                            b1.Property<int>("Fellowship")
                                .HasColumnType("integer");

                            b1.Property<int>("Initiative")
                                .HasColumnType("integer");

                            b1.Property<int>("Intelligence")
                                .HasColumnType("integer");

                            b1.Property<int>("Strength")
                                .HasColumnType("integer");

                            b1.Property<int>("Toughness")
                                .HasColumnType("integer");

                            b1.Property<int>("WeaponSkill")
                                .HasColumnType("integer");

                            b1.Property<int>("Willpower")
                                .HasColumnType("integer");

                            b1.HasKey("CharacterId");

                            b1.ToTable("Characters");

                            b1.WithOwner()
                                .HasForeignKey("CharacterId");
                        });

                    b.OwnsOne("Wfrp.Domain.Entities.Characteristics", "InitialCharacteristics", b1 =>
                        {
                            b1.Property<Guid>("CharacterId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Agility")
                                .HasColumnType("integer");

                            b1.Property<int>("BallisticSkill")
                                .HasColumnType("integer");

                            b1.Property<int>("Dexterity")
                                .HasColumnType("integer");

                            b1.Property<int>("Fellowship")
                                .HasColumnType("integer");

                            b1.Property<int>("Initiative")
                                .HasColumnType("integer");

                            b1.Property<int>("Intelligence")
                                .HasColumnType("integer");

                            b1.Property<int>("Strength")
                                .HasColumnType("integer");

                            b1.Property<int>("Toughness")
                                .HasColumnType("integer");

                            b1.Property<int>("WeaponSkill")
                                .HasColumnType("integer");

                            b1.Property<int>("Willpower")
                                .HasColumnType("integer");

                            b1.HasKey("CharacterId");

                            b1.ToTable("Characters");

                            b1.WithOwner()
                                .HasForeignKey("CharacterId");
                        });

                    b.Navigation("AdvancesCharacteristics")
                        .IsRequired();

                    b.Navigation("InitialCharacteristics")
                        .IsRequired();

                    b.Navigation("Race");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.CharacterCareer", b =>
                {
                    b.HasOne("Wfrp.Domain.Entities.Career", "Career")
                        .WithMany()
                        .HasForeignKey("CareerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wfrp.Domain.Entities.Character", "Character")
                        .WithMany("Careers")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Career");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.CharacterItem", b =>
                {
                    b.HasOne("Wfrp.Domain.Entities.Character", "Character")
                        .WithMany("Inventory")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wfrp.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.CharacterSkill", b =>
                {
                    b.HasOne("Wfrp.Domain.Entities.Character", "Character")
                        .WithMany("Skills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wfrp.Domain.Entities.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.CharacterTalent", b =>
                {
                    b.HasOne("Wfrp.Domain.Entities.Character", "Character")
                        .WithMany("Talents")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wfrp.Domain.Entities.Talent", "Talent")
                        .WithMany()
                        .HasForeignKey("TalentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Talent");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Race", b =>
                {
                    b.OwnsOne("Wfrp.Domain.Entities.Characteristics", "BaseCharacteristics", b1 =>
                        {
                            b1.Property<Guid>("RaceId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Agility")
                                .HasColumnType("integer");

                            b1.Property<int>("BallisticSkill")
                                .HasColumnType("integer");

                            b1.Property<int>("Dexterity")
                                .HasColumnType("integer");

                            b1.Property<int>("Fellowship")
                                .HasColumnType("integer");

                            b1.Property<int>("Initiative")
                                .HasColumnType("integer");

                            b1.Property<int>("Intelligence")
                                .HasColumnType("integer");

                            b1.Property<int>("Strength")
                                .HasColumnType("integer");

                            b1.Property<int>("Toughness")
                                .HasColumnType("integer");

                            b1.Property<int>("WeaponSkill")
                                .HasColumnType("integer");

                            b1.Property<int>("Willpower")
                                .HasColumnType("integer");

                            b1.HasKey("RaceId");

                            b1.ToTable("Races");

                            b1.WithOwner()
                                .HasForeignKey("RaceId");
                        });

                    b.Navigation("BaseCharacteristics")
                        .IsRequired();
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Career", b =>
                {
                    b.Navigation("Levels");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.CareerClass", b =>
                {
                    b.Navigation("Careers");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Character", b =>
                {
                    b.Navigation("Careers");

                    b.Navigation("Inventory");

                    b.Navigation("Skills");

                    b.Navigation("Talents");
                });

            modelBuilder.Entity("Wfrp.Domain.Entities.Race", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
